name: bite-release

on:
  push:
    tags: [bite-*]
    branches: ['**']
    paths:
      - ".github/workflows/bite-release.yml"
  workflow_dispatch:

jobs:
  generated:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable
      id: rust

    - name: Generate man pages
      run: |
        cargo run --features doc --bin mangen -p bugbite-cli man
        cargo run --features shell --bin compgen -p bugbite-cli shell

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: generated
        path: |
          man
          shell
        if-no-files-found: error
        retention-days: 3

  source:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["generated"]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable
      id: rust

    - name: Create vendored release tarball
      run: .ci/vendor-tarball bugbite-cli ${{ github.ref_name }}

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: generated

    - name: Create archive
      run: |
        # append generated files into the tarball
        tar -r man shell -f ${{ github.ref_name }}.tar
        # compress the tarball
        xz -9 -T0 ${{ github.ref_name }}.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: source
        path: ${{ github.ref_name }}.tar.xz
        if-no-files-found: error
        retention-days: 3

  linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build binary
      run: cross build --target ${{ matrix.target }} --profile release-strip -p bugbite-cli

    - name: Create archive
      run: |
        tar -C target/${{ matrix.target }}/release-strip \
          -cv -I "xz -9 -T0" -f ${{ github.ref_name }}-${{ matrix.target }}.tar.xz \
          bite

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.ref_name }}-${{ matrix.target }}
        path: ${{ github.ref_name }}-${{ matrix.target }}.tar.xz
        if-no-files-found: error
        retention-days: 3

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["source", "linux"]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*.tar.xz
        fail_on_unmatched_files: true
